---
title: "DAG Analysis: Confounded Causal Structure with Synthetic Data"
author: "Dan Swart"
format: 
  html:
    toc: true
    toc-float: true
    page-layout: article
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
    code-tools: true
    code-overflow: wrap
    code-block-bg: "#FAEBD7"
    code-block-border-left: "#31BAE9"
    code-link: true          # This adds individual buttons
    fig-width: 10
    fig-height: 8
    fig-align: center
    html-math-method: katex
    css: swart-20250327.css
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    papersize: letter
    geometry:
      - margin=1in
    fig-width: 10
    fig-height: 8
    fig-pos: 'H'
  typst:
    toc: true
    fig-width: 10
    fig-height: 8
    keep-tex: true
    prefer-html: true
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

# Load required libraries
library(tidyverse)  # For dplyr, ggplot, and data manipulation
library(ggdag)      # For plotting DAGs
library(dagitty)    # For working with DAG logic
library(DiagrammeR) # For DAG visualization
library(corrplot)   # For correlation plots
library(DT)         # For interactive tables
library(lavaan)     # For structural equation modeling
library(rethinking) # For Bayesian analysis
library(ggpubr)     # For arranging multiple plots
```

## 1. Introduction: Understanding Confounded Causal Structures

This document explores a confounded causal structure represented by a directed acyclic graph (DAG). Unlike the gold standard of randomized controlled trials, this DAG represents an observational study scenario where:

- X (HIV) is the exposure variable of interest
- Y (Stroke) is the outcome variable
- A (Smoking) and B (Age) are common causes that create confounding
- Multiple backdoor paths exist between the exposure and outcome

This structure reflects real-world observational data where confounding is present and must be addressed through appropriate analytical strategies. The DAG illustrates why simple associations between exposure and outcome cannot be interpreted as causal effects without proper adjustment.

## 2. Describe the DAG in words

This DAG represents a confounded causal structure with four variables:

- X (HIV): The exposure variable of interest
- Y (Stroke): The outcome variable
- A (Smoking): A confounder that affects both HIV status and stroke risk
- B (Age): A root cause that affects smoking, HIV status, and stroke risk

The key feature of this confounded structure is the presence of backdoor paths that create spurious associations between X and Y. These confounding pathways include:

1. X ← A → Y (confounding through smoking)
2. X ← B → Y (confounding through age)
3. X ← B → A → Y (confounding through the age-smoking-stroke pathway)

The causal relationships include:
1. A direct effect from X to Y (the causal effect of interest)
2. Confounding effects of A on both X and Y
3. Confounding effects of B on X, A, and Y
4. B affects A, creating a chain of confounding

In this medical context:
- HIV patients may have higher stroke risk directly due to HIV-related inflammation
- Smoking increases both HIV acquisition risk and stroke risk independently
- Age increases smoking likelihood, HIV susceptibility, and stroke risk
- These common causes create spurious associations that mask the true causal effect

The challenge with this confounded structure is that naive analysis will produce biased estimates. Proper causal identification requires closing the backdoor paths through appropriate adjustment strategies.

## 3. Recreate the DAG for reference using DiagrammeR and ggdag

```{r}
#| label: diagrammer-visualization-confounded
#| fig-cap: "Directed Acyclic Graph of Confounded Causal Structure"

library(DiagrammeR)

# Create the DAG using DiagrammeR for detailed control
confounded_dag_viz <- grViz("
  digraph DAG {
    # Graph settings
    graph [layout=neato, margin=\"0.0, 0.0, 0.0, 0.0\"]
    
    # Add a title
    labelloc=\"t\"
    label=\"Confounded Causal Pathways\\nExamining relationships with common causes\\n   \"
    fontname=\"Cabin\"  fontsize=18
    
   # Node settings
    node [shape=plaintext, fontsize=20, fontname=\"Cabin\"]
    
    # Edge settings
    edge [penwidth=1.20, color=\"darkblue\", arrowsize=1.00, fontsize=12]
    
    # Nodes with exact coordinates
    X [label=\"HIV\", pos=\"3.0, 3.0!\", fontcolor=\"dodgerblue\"]
    Y [label=\"Stroke\", pos=\"5.0, 3.0!\", fontcolor=\"dodgerblue\"]
    A [label=\"Smoking\", pos=\"1.0, 5.0!\", fontcolor=\"red\"]
    B [label=\"Age\", pos=\"1.0, 1.0!\", fontcolor=\"orange\"]
    
    # Edges with coefficients from our synthetic data
    X -> Y [label=\"0.6\"]
    A -> Y [label=\"0.8\"]
    B -> Y [label=\"0.4\"]
    A -> X [label=\"0.5\"]
    B -> X [label=\"0.3\"]
    B -> A [label=\"0.4\"]
    
    # Caption
    Caption [shape=plaintext, label=\"Figure 1: Confounded Causal Structure\", 
             fontsize=12, pos=\"2,0.0!\"]
  }
")

# Show the DiagrammeR DAG
confounded_dag_viz
```

```{r}
#| label: ggdag-visualization-confounded
#| fig-cap: "ggdag representation of the confounded causal model"

# Define the DAG using dagitty/ggdag for analysis
confounded_dag <- dagify(
  Y ~ X + A + B,
  X ~ A + B,
  A ~ B,
  exposure = "X",
  outcome = "Y",
  labels = c("X" = "HIV", 
             "Y" = "Stroke", 
             "A" = "Smoking",
             "B" = "Age")
)

# Set coordinates for nice visualization
coordinates(confounded_dag) <- list(
  x = c(X = 2, Y = 3, A = 1, B = 1),
  y = c(X = 2, Y = 2, A = 3, B = 1)
)

# Create nice visualization with ggdag
ggdag(confounded_dag, edge_type = "link") + 
  geom_dag_point(color = "lightblue", size = 14, alpha = 0.7) +
  geom_dag_text(color = "black") +
  geom_dag_edges(edge_colour = "blue", edge_width = 1.0, arrow_size = 0.6) +
  theme_dag() +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("DAG: Confounded Causal Structure")
```

## 4. Generate synthetic data following the causal structure

We'll generate synthetic data following the confounded causal relationships. Unlike experimental data, here we must be careful about the order of generation to respect the causal structure and create realistic confounding.

```{r}
#| label: generate-synthetic-data-confounded
#| tbl-cap: "Summary of the synthetic confounded data"

# Set seed for reproducibility
set.seed(42)

# Sample size
n <- 1000

# Generate the data following the confounded DAG structure
# Starting with the root cause (B - Age)
B_age <- round(rnorm(n, mean = 0, sd = 1), 3)

# Generate A (Smoking) as influenced by B (Age)
A_smoking <- round(0.4 * B_age + rnorm(n, mean = 0, sd = 0.8), 3)

# Generate X (HIV) as influenced by A (Smoking) and B (Age)
X_hiv <- round(0.5 * A_smoking + 0.3 * B_age + rnorm(n, mean = 0, sd = 0.7), 3)

# Generate Y (Stroke) as influenced by X (HIV), A (Smoking), and B (Age)
Y_stroke <- round(0.6 * X_hiv + 0.8 * A_smoking + 0.4 * B_age + rnorm(n, mean = 0, sd = 0.6), 3)

# True direct effect of X on Y is 0.6
true_direct_effect <- 0.600

# Create a data frame
confounded_data <- data.frame(
  Age = B_age,
  Smoking = A_smoking, 
  HIV = X_hiv,
  Stroke = Y_stroke
)

# Get numeric summary statistics rounded to 3 decimal places
round(sapply(confounded_data, summary), 3)
```

```{r}
#| label: true-effects-table-confounded
#| tbl-cap: "True causal effects in the confounded DAG structure"

# Create a table of true effects
true_effects_confounded <- data.frame(
  Relationship = c("Age → Smoking", "Age → HIV", "Age → Stroke", 
                   "Smoking → HIV", "Smoking → Stroke", "HIV → Stroke"),
  Effect = c(0.4, 0.3, 0.4, 0.5, 0.8, 0.6),
  Type = c("Root cause → Risk factor", "Confounder → Exposure", "Confounder → Outcome",
           "Risk factor → Exposure", "Risk factor → Outcome", "Exposure → Outcome (CAUSAL EFFECT)")
)

# Display the table
datatable(true_effects_confounded,
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## 5. Examine structure of synthetic data

### 5.1 Correlation matrix of synthetic confounded data

```{r}
#| label: correlation-analysis-confounded
#| fig-cap: "Correlation matrix of synthetic confounded data variables"

# Calculate correlation matrix
corr_matrix_confounded <- cor(confounded_data)

# Create correlation table
corr_table_confounded <- as.data.frame(round(corr_matrix_confounded, 3))

# Display correlation table
datatable(corr_table_confounded,
          options = list(pageLength = 10, dom = 't'),
          rownames = TRUE,
          class = 'cell-border stripe compact responsive')

# Correlation plot
corrplot(corr_matrix_confounded, 
         method = "color", 
         type = "upper", 
         order = "hclust",
         addCoef.col = "black",
         number.cex = 1.5,
         tl.col = "black",
         tl.srt = 45,
         diag = FALSE,
         col = colorRampPalette(c("#6BAED6", "white", "#E6550D"))(200),
         title = "Correlation Matrix of Variables",
         mar = c(0,0,1,0))

# Add a description of the correlation levels
corr_description_confounded <- data.frame(
  Variables = c("HIV and Stroke", "HIV and Smoking", "HIV and Age", 
                "Stroke and Smoking", "Stroke and Age", "Smoking and Age"),
  Correlation = c(round(cor(confounded_data$HIV, confounded_data$Stroke), 3), 
                  round(cor(confounded_data$HIV, confounded_data$Smoking), 3), 
                  round(cor(confounded_data$HIV, confounded_data$Age), 3),
                  round(cor(confounded_data$Stroke, confounded_data$Smoking), 3), 
                  round(cor(confounded_data$Stroke, confounded_data$Age), 3), 
                  round(cor(confounded_data$Smoking, confounded_data$Age), 3)),
  Interpretation = c(
    "Strong positive correlation due to direct effect plus confounding",
    "Moderate positive correlation due to smoking causing HIV risk",
    "Moderate positive correlation due to age affecting HIV risk",
    "Strong positive correlation due to smoking causing stroke plus confounding",
    "Moderate positive correlation due to age affecting stroke plus indirect effects",
    "Moderate positive correlation due to age affecting smoking behavior"
  )
)

# Display the correlation description
datatable(corr_description_confounded,
          caption = "Interpretation of key correlations in the confounded DAG structure",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## 6. Visualize distributions and relationships in synthetic data

```{r}
#| label: visualize-distributions-confounded
#| fig-cap: "Distributions of all variables in the synthetic confounded data"

# Visualize distributions of all variables
confounded_data %>%
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Value") %>%
  ggplot(aes(x = Value)) +
  geom_histogram(fill = "steelblue", alpha = 0.7, bins = 30) +
  facet_wrap(~ Variable, scales = "free") +
  theme_minimal() +
  ggtitle("Distributions of Variables in Confounded Data")
```

```{r}
#| label: visualize-relationships-confounded
#| fig-cap: "Scatterplots showing key relationships in the confounded DAG"
#| fig-subcap: 
#|   - "Relationship between HIV and Stroke (Confounded Association)"
#|   - "Relationship between Smoking and Stroke"
#|   - "Relationship between Age and Stroke"
#|   - "Relationship between Age and Smoking"
#| layout-ncol: 2

# HIV vs Stroke scatterplot (the confounded relationship of interest)
ggplot(confounded_data, aes(x = HIV, y = Stroke)) +
  geom_point(alpha = 0.3, color = "dodgerblue") +
  geom_smooth(method = "lm", formula = y ~ x, color = "darkred") +
  theme_minimal() +
  ggtitle("HIV → Stroke: Confounded Association") +
  theme(plot.title = element_text(size = 28))

# Smoking vs Stroke scatterplot
ggplot(confounded_data, aes(x = Smoking, y = Stroke)) +
  geom_point(alpha = 0.3, color = "darkgreen") +
  geom_smooth(method = "lm", formula = y ~ x, color = "darkred") +
  theme_minimal() +
  ggtitle("Smoking → Stroke: Direct Effect") +
  theme(plot.title = element_text(size = 28))

# Age vs Stroke scatterplot
ggplot(confounded_data, aes(x = Age, y = Stroke)) +
  geom_point(alpha = 0.3, color = "purple") +
  geom_smooth(method = "lm", formula = y ~ x, color = "darkred") +
  theme_minimal() +
  ggtitle("Age → Stroke: Direct + Indirect Effects") +
  theme(plot.title = element_text(size = 28))

# Age vs Smoking scatterplot
ggplot(confounded_data, aes(x = Age, y = Smoking)) +
  geom_point(alpha = 0.3, color = "orange") +
  geom_smooth(method = "lm", formula = y ~ x, color = "darkred") +
  theme_minimal() +
  ggtitle("Age → Smoking: Root Cause Effect") +
  theme(plot.title = element_text(size = 28))
```

## 7. Residual Diagnostics

Let's examine the residuals for both naive and adjusted models to understand the impact of confounding.

```{r}
#| label: model-residuals-confounded
#| fig-cap: "Residual diagnostics for confounded models"

# Create models with different approaches
confounded_models <- list(
  "Naive (Biased)" = lm(Stroke ~ HIV, data = confounded_data),
  "Adjusted for Smoking" = lm(Stroke ~ HIV + Smoking, data = confounded_data),
  "Adjusted for Age" = lm(Stroke ~ HIV + Age, data = confounded_data),
  "Fully Adjusted (Correct)" = lm(Stroke ~ HIV + Smoking + Age, data = confounded_data)
)

# Get the correct model (fully adjusted)
correct_confounded_model <- confounded_models[["Fully Adjusted (Correct)"]]

# Plot diagnostics for the correct model
par(mfrow = c(2, 2))
plot(correct_confounded_model, main = "Fully Adjusted Model Diagnostics")
```

The residual plots for our fully adjusted model show:

1. **Residuals vs Fitted**: Points are randomly scattered around zero, supporting the linear relationship assumption after proper adjustment.

2. **Normal Q-Q**: Points follow the diagonal line closely, indicating approximately normal residuals.

3. **Scale-Location**: No clear pattern in the variance, supporting homoscedasticity.

4. **Residuals vs Leverage**: No influential outliers detected.

These diagnostics confirm that the fully adjusted linear model appropriately handles the confounding structure.

## 8. Test the Structure by comparing models with and without adjustment

### 8.1 Naive Model (Biased due to Confounding)

```{r}
#| label: naive-model-confounded
#| tbl-cap: "Results of the naive model (biased due to confounding)"

# Fit naive model (biased due to confounding)
model_naive_confounded <- lm(Stroke ~ HIV, data = confounded_data)

# Display model summary
summary_naive_conf <- summary(model_naive_confounded)

# Extract the coefficient for HIV
coef_naive_confounded <- coef(model_naive_confounded)["HIV"]

# Create a data frame for the table
naive_results_conf <- data.frame(
  Term = c("Intercept", "HIV"),
  Estimate = c(coef(model_naive_confounded)[1], coef(model_naive_confounded)[2]),
  StdError = c(summary_naive_conf$coefficients[1,2], summary_naive_conf$coefficients[2,2]),
  tValue = c(summary_naive_conf$coefficients[1,3], summary_naive_conf$coefficients[2,3]),
  pValue = c(summary_naive_conf$coefficients[1,4], summary_naive_conf$coefficients[2,4])
)

# Display the results
datatable(naive_results_conf,
          caption = "Naive Model Results (Biased due to Confounding)",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE) %>%
  formatRound(columns=c('Estimate', 'StdError', 'tValue'), digits=3) %>%
  formatSignif(columns='pValue', digits=3)
```

### 8.2 Fully Adjusted Model (Correct for Confounded Design)

```{r}
#| label: adjusted-model-correct
#| tbl-cap: "Results of fully adjusted model (correct for confounded design)"

# Fit fully adjusted model (correct for confounded design)
model_adjusted_correct <- lm(Stroke ~ HIV + Smoking + Age, data = confounded_data)

# Display model summary
summary_adj_correct <- summary(model_adjusted_correct)

# Extract the coefficient for HIV
coef_adjusted_correct <- coef(model_adjusted_correct)["HIV"]

# Create a data frame for the table
adj_correct_results <- data.frame(
  Term = c("Intercept", "HIV", "Smoking", "Age"),
  Estimate = coef(model_adjusted_correct),
  StdError = summary_adj_correct$coefficients[,2],
  tValue = summary_adj_correct$coefficients[,3],
  pValue = summary_adj_correct$coefficients[,4]
)

# Display the results
datatable(adj_correct_results,
          caption = "Fully Adjusted Model Results (Correct for Confounded Design)",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE) %>%
  formatRound(columns=c('Estimate', 'StdError', 'tValue'), digits=3) %>%
  formatSignif(columns='pValue', digits=3)

# Show R-squared
r2_adj_correct <- data.frame(
  Measure = c("R-squared", "Adjusted R-squared"),
  Value = c(summary_adj_correct$r.squared, summary_adj_correct$adj.r.squared)
)

datatable(r2_adj_correct,
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE) %>%
  formatRound(columns='Value', digits=3)
```

## 9. Comparing Model Results

```{r}
#| label: model-comparison-confounded
#| tbl-cap: "Comparison of different modeling strategies for confounded data"

# True effect of HIV on Stroke
true_effect_conf <- 0.600

# Create a comparison table for all models
comparison_conf_df <- data.frame(
  Model = c("True Causal Effect",
           "Naive (Biased)", 
           "Adjusted for Smoking", 
           "Adjusted for Age",
           "Fully Adjusted (Correct)"),
  Coefficient = c(
    true_effect_conf,
    coef(confounded_models[["Naive (Biased)"]])["HIV"],
    coef(confounded_models[["Adjusted for Smoking"]])["HIV"],
    coef(confounded_models[["Adjusted for Age"]])["HIV"],
    coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"]
  ),
  StandardError = c(
    NA,
    summary(confounded_models[["Naive (Biased)"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Adjusted for Smoking"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Adjusted for Age"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Fully Adjusted (Correct)"]])$coefficients["HIV", "Std. Error"]
  )
)

# Calculate error and bias
comparison_conf_df$Error <- comparison_conf_df$Coefficient - true_effect_conf
comparison_conf_df$BiasPercent <- 100 * (comparison_conf_df$Coefficient - true_effect_conf) / true_effect_conf

# Add R-squared values
comparison_conf_df$R2 <- c(
  NA,
  summary(confounded_models[["Naive (Biased)"]])$r.squared,
  summary(confounded_models[["Adjusted for Smoking"]])$r.squared,
  summary(confounded_models[["Adjusted for Age"]])$r.squared,
  summary(confounded_models[["Fully Adjusted (Correct)"]])$r.squared
)

# Format for display
comparison_conf_df$Coefficient <- round(comparison_conf_df$Coefficient, 3)
comparison_conf_df$StandardError <- round(comparison_conf_df$StandardError, 3)
comparison_conf_df$Error <- round(comparison_conf_df$Error, 3)
comparison_conf_df$BiasPercent <- round(comparison_conf_df$BiasPercent, 3)
comparison_conf_df$R2 <- round(comparison_conf_df$R2, 3)

# Display as a table
datatable(comparison_conf_df,
          caption = "Comparison of Different Modeling Strategies for Confounded Data",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## 10. Statistical tests for differences between models

```{r}
#| label: statistical-tests-diffs-confounded
#| tbl-cap: "Statistical tests for model performance in confounded design"

# Compare models using anova and tests against true effect
model_comp_naive_smoking <- anova(confounded_models[["Naive (Biased)"]], confounded_models[["Adjusted for Smoking"]])
model_comp_naive_age <- anova(confounded_models[["Naive (Biased)"]], confounded_models[["Adjusted for Age"]])
model_comp_naive_full <- anova(confounded_models[["Naive (Biased)"]], confounded_models[["Fully Adjusted (Correct)"]])

# Test if naive coefficient differs from true effect
naive_z_stat_conf <- (coef(confounded_models[["Naive (Biased)"]])["HIV"] - true_effect_conf) / 
  summary(confounded_models[["Naive (Biased)"]])$coefficients["HIV", "Std. Error"]
naive_p_value_conf <- 2 * (1 - pnorm(abs(naive_z_stat_conf)))

# Test if fully adjusted coefficient differs from true effect
adj_z_stat_conf <- (coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"] - true_effect_conf) / 
  summary(confounded_models[["Fully Adjusted (Correct)"]])$coefficients["HIV", "Std. Error"]
adj_p_value_conf <- 2 * (1 - pnorm(abs(adj_z_stat_conf)))

# Create a data frame for the results
significance_conf_df <- data.frame(
  Comparison = c(
    "Naive vs. Adjusted for Smoking",
    "Naive vs. Adjusted for Age",
    "Naive vs. Fully Adjusted",
    "Naive Model vs. True Effect",
    "Fully Adjusted Model vs. True Effect"
  ),
  
  Test = c(
    "F-test (ANOVA)",
    "F-test (ANOVA)",
    "F-test (ANOVA)",
    "Z-test (coefficient vs. true effect)",
    "Z-test (coefficient vs. true effect)"
  ),
  
  Statistic = c(
    round(model_comp_naive_smoking$F[2], 3),
    round(model_comp_naive_age$F[2], 3),
    round(model_comp_naive_full$F[2], 3),
    round(naive_z_stat_conf, 3),
    round(adj_z_stat_conf, 3)
  ),
  
  PValue = c(
    round(model_comp_naive_smoking$`Pr(>F)`[2], 3),
    round(model_comp_naive_age$`Pr(>F)`[2], 3),
    round(model_comp_naive_full$`Pr(>F)`[2], 3),
    round(naive_p_value_conf, 3),
    round(adj_p_value_conf, 3)
  ),
  
  Conclusion = c(
    ifelse(model_comp_naive_smoking$`Pr(>F)`[2] < 0.05, 
           "Adjusted model significantly improves fit", 
           "No significant improvement in model fit"),
    
    ifelse(model_comp_naive_age$`Pr(>F)`[2] < 0.05,
           "Adjusted model significantly improves fit",
           "No significant improvement in model fit"),
    
    ifelse(model_comp_naive_full$`Pr(>F)`[2] < 0.05,
           "Full model significantly improves fit",
           "No significant improvement in model fit"),
    
    ifelse(naive_p_value_conf < 0.05,
           "Naive estimate significantly differs from true effect",
           "Naive estimate not significantly different from true effect"),
    
    ifelse(adj_p_value_conf < 0.05,
           "Adjusted estimate significantly differs from true effect",
           "Adjusted estimate not significantly different from true effect")
  )
)

# Display as a table
datatable(significance_conf_df,
          caption = "Statistical Tests for Model Performance in Confounded Design",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from Model Comparisons:

The statistical tests demonstrate the critical importance of proper adjustment in confounded designs:

1. **Substantial bias without adjustment**: The naive model provides a heavily biased estimate of the causal effect.

2. **Necessity of complete adjustment**: Only the fully adjusted model provides an unbiased estimate.

3. **Partial adjustment insufficient**: Adjusting for only one confounder leaves residual bias.

4. **Significant model improvements**: All adjusted models significantly improve fit over the naive approach.

## 11. Identifying Backdoor Paths and Adjustment Sets

```{r}
#| label: backdoor-analysis
#| tbl-cap: "Backdoor paths and adjustment strategies"

# Define the DAG for backdoor analysis
confounded_dag_dagitty <- dagitty("dag{
  HIV -> Stroke
  Smoking -> HIV
  Smoking -> Stroke  
  Age -> Smoking
  Age -> HIV
  Age -> Stroke
}")

# Set exposure and outcome
exposures(confounded_dag_dagitty) <- "HIV"
outcomes(confounded_dag_dagitty) <- "Stroke"

# Find all backdoor paths
backdoor_paths <- dagitty::paths(confounded_dag_dagitty, from = "HIV", to = "Stroke")

# Find minimal adjustment sets
adjustment_sets <- adjustmentSets(confounded_dag_dagitty)

# Create backdoor paths table
backdoor_df <- data.frame(
  Path_Number = 1:3,
  Backdoor_Path = c(
    "HIV ← Smoking → Stroke",
    "HIV ← Age → Stroke", 
    "HIV ← Age → Smoking → Stroke"
  ),
  Path_Type = c("Direct confounding", "Direct confounding", "Indirect confounding"),
  Blocked_By = c("Adjusting for Smoking", "Adjusting for Age", "Adjusting for Age or Smoking")
)

datatable(backdoor_df,
          caption = "Backdoor Paths in the Confounded DAG",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')

# Create adjustment sets table
adj_sets_df <- data.frame(
  Adjustment_Set = c("{ Age, Smoking }", "Minimal sufficient set"),
  Description = c("Complete adjustment closing all backdoor paths", 
                  "Both Age and Smoking needed for unbiased estimation"),
  Status = c("Sufficient", "Necessary and sufficient")
)

datatable(adj_sets_df,
          caption = "Adjustment Sets for Causal Identification",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## 12. Testing Confounding: Correlations and Dependencies

```{r}
#| label: confounding-tests
#| tbl-cap: "Testing for confounding relationships"

# Test correlations that indicate confounding
confounding_tests <- data.frame(
  Relationship = c("Age and HIV", "Age and Stroke", "Smoking and HIV", "Smoking and Stroke", 
                   "Age and Smoking", "HIV and Stroke"),
  Correlation = c(cor(confounded_data$Age, confounded_data$HIV), 
                  cor(confounded_data$Age, confounded_data$Stroke),
                  cor(confounded_data$Smoking, confounded_data$HIV), 
                  cor(confounded_data$Smoking, confounded_data$Stroke),
                  cor(confounded_data$Age, confounded_data$Smoking),
                  cor(confounded_data$HIV, confounded_data$Stroke)),
  P_Value = c(cor.test(confounded_data$Age, confounded_data$HIV)$p.value,
              cor.test(confounded_data$Age, confounded_data$Stroke)$p.value,
              cor.test(confounded_data$Smoking, confounded_data$HIV)$p.value,
              cor.test(confounded_data$Smoking, confounded_data$Stroke)$p.value,
              cor.test(confounded_data$Age, confounded_data$Smoking)$p.value,
              cor.test(confounded_data$HIV, confounded_data$Stroke)$p.value),
  Confounding_Evidence = c(
    "Age affects HIV (confounder)",
    "Age affects Stroke (confounder)", 
    "Smoking affects HIV (confounder)",
    "Smoking affects Stroke (confounder)",
    "Age affects Smoking (creates confounding chain)",
    "HIV and Stroke associated (includes causal + confounding effects)"
  )
)

# Format the results
confounding_tests$Correlation <- round(confounding_tests$Correlation, 3)
confounding_tests$P_Value <- round(confounding_tests$P_Value, 3)

# Display as a table
datatable(confounding_tests,
          caption = "Evidence for Confounding Relationships",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from Confounding Tests:

The confounding tests confirm the presence of multiple confounding pathways:

1. **Strong confounding present**: All relationships show significant correlations, indicating confounding.

2. **Multiple confounders**: Both Age and Smoking act as confounders of the HIV-Stroke relationship.

3. **Chained confounding**: Age affects Smoking, which then affects both HIV and Stroke.

4. **Inflated association**: The HIV-Stroke correlation includes both causal effects and confounding bias.

## 13. Stratification Analysis

```{r}
#| label: stratification-analysis-confounded
#| fig-cap: "Stratified analysis showing confounding effects"
#| fig-subcap: 
#|   - "HIV-Stroke Relationship Stratified by Smoking"
#|   - "HIV-Stroke Relationship Stratified by Age" 
#|   - "HIV-Stroke Relationship by Age and Smoking Combined"
#|   - "Smoking-Stroke Relationship Stratified by Age"
#| layout-ncol: 2

# Create Smoking strata
confounded_data <- confounded_data %>%
  mutate(Smoking_strata = cut(Smoking, breaks = 3, labels = c("Low Smoking", "Medium Smoking", "High Smoking")))

# Stratified analysis by Smoking
p1_conf <- ggplot(confounded_data, aes(x = HIV, y = Stroke, color = Smoking_strata)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ Smoking_strata) +
  labs(title = "HIV-Stroke Relationship Stratified by Smoking",
       subtitle = "Different intercepts but similar slopes indicate confounding") +
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 28),
        plot.subtitle = element_text(size = 28))
print(p1_conf)

# Create Age strata
confounded_data <- confounded_data %>%
  mutate(Age_strata = cut(Age, breaks = 3, labels = c("Young", "Middle Age", "Old")))

# Stratified analysis by Age
p2_conf <- ggplot(confounded_data, aes(x = HIV, y = Stroke, color = Age_strata)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ Age_strata) +
  labs(title = "HIV-Stroke Relationship Stratified by Age",
       subtitle = "Different intercepts show confounding by age") +
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 28),
        plot.subtitle = element_text(size = 28))
print(p2_conf)

# Create combined Age and Smoking strata
confounded_data <- confounded_data %>%
  mutate(Combined_strata = paste(Age_strata, Smoking_strata, sep = " + "))

# Stratified analysis by combined strata (show subset for clarity)
p3_conf <- confounded_data %>%
  filter(Combined_strata %in% c("Young + Low Smoking", "Old + High Smoking", 
                                "Middle Age + Medium Smoking")) %>%
  ggplot(aes(x = HIV, y = Stroke, color = Combined_strata)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ Combined_strata) +
  labs(title = "HIV-Stroke by Age and Smoking Combined",
       subtitle = "Controlling for both confounders") +
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 28),
        plot.subtitle = element_text(size = 28))
print(p3_conf)

# Smoking-Stroke relationship stratified by Age
p4_conf <- ggplot(confounded_data, aes(x = Smoking, y = Stroke, color = Age_strata)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ Age_strata) +
  labs(title = "Smoking-Stroke Relationship Stratified by Age",
       subtitle = "Age confounds the smoking-stroke relationship") +
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(size = 28),
        plot.subtitle = element_text(size = 28))
print(p4_conf)
```

## Conclusions from Stratification Analysis:

The stratified analysis reveals the confounding structure:

1. **Intercept differences**: Different strata show different intercepts, indicating confounding effects.

2. **Slope consistency**: Within strata, the HIV-Stroke slope is more consistent, suggesting the true causal effect.

3. **Residual confounding**: Stratifying by only one variable leaves residual confounding from the other.

4. **Combined stratification**: Controlling for both confounders simultaneously provides the clearest picture.

## 14. Structural Equation Modeling (SEM)

```{r}
#| label: sem-analysis-confounded
#| tbl-cap: "Structural Equation Model Results for Confounded Design"

# Define the SEM model based on our confounded DAG
sem_model_conf <- '
  # Structural equations (following the confounded DAG)
  Smoking ~ b1*Age
  HIV ~ a1*Smoking + b2*Age
  Stroke ~ x1*HIV + a2*Smoking + b3*Age
  
  # Define indirect effects
  Age_to_HIV_via_Smoking := b1*a1
  Age_to_Stroke_via_Smoking := b1*a2
  Age_to_Stroke_via_HIV := b2*x1
  Age_to_Stroke_via_Smoking_HIV := b1*a1*x1
  Age_to_Stroke_total := b3 + Age_to_Stroke_via_Smoking + Age_to_Stroke_via_HIV + Age_to_Stroke_via_Smoking_HIV
  Smoking_to_Stroke_via_HIV := a1*x1
  Smoking_to_Stroke_total := a2 + Smoking_to_Stroke_via_HIV
'

# Fit the model
sem_fit_conf <- sem(sem_model_conf, data = confounded_data)

# Display the results
sem_summary_conf <- summary(sem_fit_conf, standardized = TRUE, fit.measures = TRUE)

# Extract and display path coefficients
sem_coefs_conf <- parameterEstimates(sem_fit_conf) %>%
  filter(op %in% c("~", ":=")) %>%
  select(lhs, op, rhs, est, se, z, pvalue, ci.lower, ci.upper)

# Create a formatted results table
sem_results_conf <- sem_coefs_conf %>%
  mutate(
    Path = case_when(
      op == "~" & lhs == "Smoking" ~ paste(lhs, "<-", rhs),
      op == "~" & lhs == "HIV" ~ paste(lhs, "<-", rhs),
      op == "~" & lhs == "Stroke" ~ paste(lhs, "<-", rhs),
      op == ":=" & grepl("Age_to", rhs) ~ paste("Age →", gsub("Age_to_", "", gsub("_", " ", rhs))),
      op == ":=" & grepl("Smoking_to", rhs) ~ paste("Smoking →", gsub("Smoking_to_", "", gsub("_", " ", rhs))),
      TRUE ~ paste(lhs, op, rhs)
    ),
    Estimate = round(est, 3),
    SE = round(se, 3),
    `Z-value` = round(z, 3),
    `P-value` = round(pvalue, 3),
    `95% CI` = paste0("[", round(ci.lower, 3), ", ", round(ci.upper, 3), "]")
  ) %>%
  select(Path, Estimate, SE, `Z-value`, `P-value`, `95% CI`)

# Display the results table  
datatable(sem_results_conf,
          caption = "Structural Equation Model Path Coefficients for Confounded Design",
          options = list(pageLength = 15, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

```{r}
#| label: sem-fit-measures-confounded
#| tbl-cap: "SEM Model Fit Measures for Confounded Design"

# Extract fit measures
fit_measures_conf <- fitMeasures(sem_fit_conf)

# Create a table of key fit measures
fit_table_conf <- data.frame(
  Measure = c("Chi-square", "df", "P-value", "CFI", "TLI", "RMSEA", "RMSEA CI Lower", "RMSEA CI Upper", "SRMR"),
  Value = c(
    round(fit_measures_conf["chisq"], 3),
    fit_measures_conf["df"],
    round(fit_measures_conf["pvalue"], 3),
    round(fit_measures_conf["cfi"], 3),
    round(fit_measures_conf["tli"], 3),
    round(fit_measures_conf["rmsea"], 3),
    round(fit_measures_conf["rmsea.ci.lower"], 3),
    round(fit_measures_conf["rmsea.ci.upper"], 3),
    round(fit_measures_conf["srmr"], 3)
  ),
  Interpretation = c(
    "Model chi-square",
    "Degrees of freedom",
    "P-value for chi-square test",
    "Comparative Fit Index (>0.95 good)",
    "Tucker-Lewis Index (>0.95 good)",
    "Root Mean Square Error of Approximation (<0.06 good)",
    "RMSEA 95% CI lower bound",
    "RMSEA 95% CI upper bound", 
    "Standardized Root Mean Square Residual (<0.08 good)"
  )
)

datatable(fit_table_conf,
          caption = "Structural Equation Model Fit Indices for Confounded Design",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from SEM Analysis:

The structural equation model quantifies the confounded design:

1. **Excellent model fit**: All fit indices indicate the model represents the data well.

2. **Direct treatment effect**: The HIV → Stroke coefficient represents the true causal effect.

3. **Multiple indirect effects**: Age and Smoking create complex indirect pathways to the outcome.

4. **Total effects decomposed**: We can separate direct effects from indirect confounding effects.

## 15. Examining Confounding Bias: Naive vs Adjusted Estimates

```{r}
#| label: confounding-bias-analysis
#| fig-cap: "Visualizing confounding bias across different adjustment strategies"

# Create a comparison of coefficient estimates
bias_comparison <- data.frame(
  Model = c("Naive", "Age Only", "Smoking Only", "Fully Adjusted"),
  HIV_Coefficient = c(
    coef(confounded_models[["Naive (Biased)"]])["HIV"],
    coef(confounded_models[["Adjusted for Age"]])["HIV"],
    coef(confounded_models[["Adjusted for Smoking"]])["HIV"],
    coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"]
  ),
  Bias = c(
    coef(confounded_models[["Naive (Biased)"]])["HIV"] - true_effect_conf,
    coef(confounded_models[["Adjusted for Age"]])["HIV"] - true_effect_conf,
    coef(confounded_models[["Adjusted for Smoking"]])["HIV"] - true_effect_conf,
    coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"] - true_effect_conf
  ),
  Standard_Error = c(
    summary(confounded_models[["Naive (Biased)"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Adjusted for Age"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Adjusted for Smoking"]])$coefficients["HIV", "Std. Error"],
    summary(confounded_models[["Fully Adjusted (Correct)"]])$coefficients["HIV", "Std. Error"]
  )
)

# Calculate confidence intervals
bias_comparison$CI_Lower <- bias_comparison$HIV_Coefficient - 1.96 * bias_comparison$Standard_Error
bias_comparison$CI_Upper <- bias_comparison$HIV_Coefficient + 1.96 * bias_comparison$Standard_Error

# Plot bias comparison
ggplot(bias_comparison, aes(x = factor(Model, levels = c("Naive", "Age Only", "Smoking Only", "Fully Adjusted")), 
                           y = HIV_Coefficient)) +
  geom_pointrange(aes(ymin = CI_Lower, ymax = CI_Upper), 
                 size = 1.2, color = "darkblue") +
  geom_hline(yintercept = true_effect_conf, linetype = "dashed", color = "red", size = 1) +
  labs(title = "Confounding Bias Across Different Adjustment Strategies",
       subtitle = "Red line shows true causal effect (0.6)",
       x = "Adjustment Strategy",
       y = "Estimated HIV Effect on Stroke") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Create bias table
bias_table <- data.frame(
  Model = bias_comparison$Model,
  Estimate = round(bias_comparison$HIV_Coefficient, 3),
  Bias = round(bias_comparison$Bias, 3),
  Bias_Percent = round(100 * bias_comparison$Bias / true_effect_conf, 1),
  Status = c("Severely Biased", "Partially Biased", "Partially Biased", "Unbiased")
)

datatable(bias_table,
          caption = "Confounding Bias Analysis",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from Confounding Bias Analysis:

The bias analysis demonstrates the critical importance of complete adjustment:

1. **Severe naive bias**: The naive model overestimates the effect by over 60%.

2. **Partial adjustment insufficient**: Adjusting for only one confounder reduces but doesn't eliminate bias.

3. **Complete adjustment necessary**: Only the fully adjusted model provides an unbiased estimate.

4. **Bias direction**: In this case, confounding inflates the apparent effect (positive confounding bias).

## 16. Power Analysis for Confounded Design

```{r}
#| label: power-analysis-confounded
#| tbl-cap: "Power analysis for detecting treatment effects in confounded design"

# Calculate power for different effect sizes and sample sizes
effect_sizes_conf <- c(0.2, 0.4, 0.6, 0.8, 1.0)
sample_sizes_conf <- c(100, 250, 500, 750, 1000)

# Function to calculate power for confounded design
calculate_power_confounded <- function(effect_size, n, alpha = 0.05) {
  # Use residual standard error from our fully adjusted model
  residual_se_conf <- summary(model_adjusted_correct)$sigma
  
  # Standard error of treatment coefficient in full model
  se_treatment_conf <- summary(model_adjusted_correct)$coefficients["HIV", "Std. Error"]
  
  # Adjust for sample size
  se_treatment_adj_conf <- se_treatment_conf * sqrt(1000 / n)
  
  # Calculate power
  t_critical_conf <- qt(1 - alpha/2, df = n - 4)  # 4 parameters in full model
  power_conf <- 1 - pt(t_critical_conf, df = n - 4, ncp = effect_size / se_treatment_adj_conf) +
           pt(-t_critical_conf, df = n - 4, ncp = effect_size / se_treatment_adj_conf)
  
  return(power_conf)
}

# Create power analysis table
power_analysis_conf <- expand.grid(
  Effect_Size = effect_sizes_conf,
  Sample_Size = sample_sizes_conf
)

power_analysis_conf$Power <- mapply(calculate_power_confounded, 
                               power_analysis_conf$Effect_Size, 
                               power_analysis_conf$Sample_Size)

# Format and display
power_analysis_conf$Power <- round(power_analysis_conf$Power, 3)

# Reshape for better display
power_wide_conf <- power_analysis_conf %>%
  pivot_wider(names_from = Sample_Size, values_from = Power, names_prefix = "N_")

datatable(power_wide_conf,
          caption = "Statistical Power for Different Effect Sizes and Sample Sizes (Confounded Design)",
          options = list(pageLength = 10, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

```{r}
#| label: power-visualization-confounded
#| fig-cap: "Power curves for different effect sizes in confounded design"

# Create power curves
ggplot(power_analysis_conf, aes(x = Sample_Size, y = Power, color = factor(Effect_Size))) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
  scale_color_viridis_d(name = "Effect Size") +
  labs(title = "Statistical Power vs Sample Size for Confounded Design",
       subtitle = "Red dashed line shows 80% power threshold",
       x = "Sample Size", y = "Statistical Power") +
  theme_minimal() +
  theme(legend.position = "bottom")
```

## Conclusions from Power Analysis:

The power analysis reveals considerations for confounded study designs:

1. **Lower power than experimental designs**: Confounded designs require larger samples due to additional parameters.

2. **Adequate power achieved**: Our sample size of 1000 provides excellent power for detecting the true effect.

3. **Effect size matters**: Smaller effects require substantially larger samples in confounded designs.

## 17. Bayesian Causal Inference Analysis

```{r}
#| label: bayesian-causal-analysis-confounded
#| message: false
#| warning: false
#| results: 'hide'

# Standardize variables for better model fitting
confounded_data_std <- confounded_data %>%
  select(Age, Smoking, HIV, Stroke) %>%
  mutate(across(where(is.numeric), scale)) %>%
  as.data.frame()

# Define and fit Bayesian models
# 1. Naive model (biased)
m_naive_conf <- quap(
  alist(
    Stroke ~ dnorm(mu, sigma),
    mu <- a + bHIV * HIV,
    a ~ dnorm(0, 1),
    bHIV ~ dnorm(0, 1),
    sigma ~ dexp(1)
  ),
  data = confounded_data_std
)

# 2. Partially adjusted models
m_age_conf <- quap(
  alist(
    Stroke ~ dnorm(mu, sigma),
    mu <- a + bHIV * HIV + bAge * Age,
    a ~ dnorm(0, 1),
    bHIV ~ dnorm(0, 1),
    bAge ~ dnorm(0, 1),
    sigma ~ dexp(1)
  ),
  data = confounded_data_std
)

m_smoking_conf <- quap(
  alist(
    Stroke ~ dnorm(mu, sigma),
    mu <- a + bHIV * HIV + bSmoking * Smoking,
    a ~ dnorm(0, 1),
    bHIV ~ dnorm(0, 1),
    bSmoking ~ dnorm(0, 1),
    sigma ~ dexp(1)
  ),
  data = confounded_data_std
)

# 3. Fully adjusted model (correct)
m_full_conf <- quap(
  alist(
    Stroke ~ dnorm(mu, sigma),
    mu <- a + bHIV * HIV + bSmoking * Smoking + bAge * Age,
    a ~ dnorm(0, 1),
    bHIV ~ dnorm(0, 1),
    bSmoking ~ dnorm(0, 1),
    bAge ~ dnorm(0, 1),
    sigma ~ dexp(1)
  ),
  data = confounded_data_std
)
```

```{r}
#| label: extract-bayesian-posteriors-confounded
#| tbl-cap: "Bayesian estimates of the treatment effect in confounded design"

# Extract samples from the posterior distributions
post_naive_conf <- extract.samples(m_naive_conf)
post_age_conf <- extract.samples(m_age_conf)
post_smoking_conf <- extract.samples(m_smoking_conf)
post_full_conf <- extract.samples(m_full_conf)

# Create a function to summarize posteriors
summarize_posterior_conf <- function(posterior, name) {
  data.frame(
    Model = name,
    Mean = mean(posterior$bHIV),
    Median = median(posterior$bHIV),
    SD = sd(posterior$bHIV),
    CI_Lower = quantile(posterior$bHIV, 0.025),
    CI_Upper = quantile(posterior$bHIV, 0.975),
    Width = quantile(posterior$bHIV, 0.975) - quantile(posterior$bHIV, 0.025)
  )
}

# Summarize the models
bayesian_results_conf <- rbind(
  summarize_posterior_conf(post_naive_conf, "Naive (Biased)"),
  summarize_posterior_conf(post_age_conf, "Adjusted for Age"),
  summarize_posterior_conf(post_smoking_conf, "Adjusted for Smoking"),
  summarize_posterior_conf(post_full_conf, "Fully Adjusted (Correct)")
)

# Display the results
datatable(bayesian_results_conf,
          caption = "Bayesian estimates of the treatment effect under different adjustment strategies",
          options = list(pageLength = 5, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive') %>%
  formatRound(columns = c("Mean", "Median", "SD", "CI_Lower", "CI_Upper", "Width"), digits = 3)
```

```{r}
#| label: plot-bayesian-posteriors-confounded
#| fig-width: 10
#| fig-height: 6
#| fig-cap: "Posterior distributions of treatment effect estimates in confounded design"

# Create a data frame with the posterior samples
all_posteriors_conf <- data.frame(
  `Naive (Biased)` = post_naive_conf$bHIV,
  `Adjusted for Age` = post_age_conf$bHIV,
  `Adjusted for Smoking` = post_smoking_conf$bHIV,
  `Fully Adjusted (Correct)` = post_full_conf$bHIV,
  check.names = FALSE
)

# Convert to long format for plotting
long_posteriors_conf <- all_posteriors_conf %>%
  pivot_longer(cols = everything(),
               names_to = "Model",
               values_to = "Effect_Estimate")

# Set factor levels for consistent ordering
long_posteriors_conf$Model <- factor(long_posteriors_conf$Model,
                                levels = c("Naive (Biased)", "Adjusted for Age", 
                                          "Adjusted for Smoking", "Fully Adjusted (Correct)"))

# Plot density curves for all models
ggplot(long_posteriors_conf, aes(x = Effect_Estimate, fill = Model)) +
  geom_density(alpha = 0.6) +
  geom_vline(data = bayesian_results_conf,
             aes(xintercept = Mean, color = Model),
             linetype = "dashed", size = 1) +
  scale_fill_brewer(palette = "Set1") +
  scale_color_brewer(palette = "Set1") +
  labs(
    title = "Posterior Distributions of the Treatment Effect",
    subtitle = "Shows dramatic impact of confounding bias",
    x = "Treatment Effect (Standardized)",
    y = "Density"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

## Interpretation of Bayesian Analysis:

The Bayesian analysis demonstrates the impact of confounding:

1. **Biased naive estimates**: The naive model shows a severely biased posterior distribution.

2. **Partial adjustment**: Adjusting for individual confounders reduces but doesn't eliminate bias.

3. **Complete adjustment necessary**: Only the fully adjusted model provides unbiased posterior estimates.

4. **Uncertainty quantification**: Bayesian analysis clearly shows the uncertainty around biased estimates.

## 18. Counterfactual Analysis: Treatment Effect Estimation

```{r}
#| label: counterfactual-analysis-confounded
#| fig-cap: "Counterfactual predictions under different treatment levels (confounded design)"

# Function to predict Stroke based on different HIV levels (using correct model)
predict_counterfactual_conf <- function(hiv_values, data = confounded_data) {
  # Use the fully adjusted model (correct for confounded design)
  model <- lm(Stroke ~ HIV + Smoking + Age, data = data)
  
  # Use mean values for confounders
  mean_smoking <- mean(data$Smoking)
  mean_age <- mean(data$Age)
  
  # Predict Stroke for different values of HIV
  stroke_pred <- predict(model, newdata = data.frame(
    HIV = hiv_values,
    Smoking = mean_smoking,
    Age = mean_age
  ))
  
  return(stroke_pred)
}

# Create a range of HIV values for intervention
hiv_range <- seq(min(confounded_data$HIV), max(confounded_data$HIV), length.out = 100)

# Predict Stroke for different HIV levels
stroke_pred_conf <- predict_counterfactual_conf(hiv_range)

# Create a data frame for plotting
counterfactual_conf_df <- data.frame(HIV = hiv_range, Stroke = stroke_pred_conf)

# Also show naive prediction for comparison
naive_pred <- predict(confounded_models[["Naive (Biased)"]], 
                     newdata = data.frame(HIV = hiv_range))
counterfactual_naive_df <- data.frame(HIV = hiv_range, Stroke = naive_pred)

# Plot the counterfactual predictions
ggplot() +
  # Add actual data points
  geom_point(data = confounded_data, aes(x = HIV, y = Stroke), alpha = 0.2, color = "gray") +
  # Add naive prediction (biased)
  geom_line(data = counterfactual_naive_df, aes(x = HIV, y = Stroke),
            color = "red", size = 1.5, linetype = "dashed") +
  # Add corrected counterfactual prediction
  geom_line(data = counterfactual_conf_df, aes(x = HIV, y = Stroke),
            color = "blue", size = 1.5) +
  labs(
    title = "Counterfactual Prediction: HIV Effect on Stroke",
    subtitle = "Blue line shows adjusted effect, red dashed shows naive (biased) effect",
    x = "HIV Status",
    y = "Stroke Risk"
  ) +
  theme_minimal()
```

```{r}
#| label: treatment-effect-table-confounded
#| tbl-cap: "Estimated treatment effects under different interventions (confounded design)"

# Calculate treatment effects for specific interventions
intervention_effects_conf <- data.frame(
  Intervention = c(
    "Increase HIV exposure by 1 unit",
    "Increase HIV exposure by 2 units",
    "Move from 25th to 75th percentile",
    "Move from minimum to maximum HIV exposure"
  ),
  HIV_Change = c(
    1,
    2,
    quantile(confounded_data$HIV, 0.75) - quantile(confounded_data$HIV, 0.25),
    max(confounded_data$HIV) - min(confounded_data$HIV)
  ),
  Naive_Effect = c(
    1 * coef(confounded_models[["Naive (Biased)"]])["HIV"],
    2 * coef(confounded_models[["Naive (Biased)"]])["HIV"],
    (quantile(confounded_data$HIV, 0.75) - quantile(confounded_data$HIV, 0.25)) * coef(confounded_models[["Naive (Biased)"]])["HIV"],
    (max(confounded_data$HIV) - min(confounded_data$HIV)) * coef(confounded_models[["Naive (Biased)"]])["HIV"]
  ),
  Adjusted_Effect = c(
    1 * coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"],
    2 * coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"],
    (quantile(confounded_data$HIV, 0.75) - quantile(confounded_data$HIV, 0.25)) * coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"],
    (max(confounded_data$HIV) - min(confounded_data$HIV)) * coef(confounded_models[["Fully Adjusted (Correct)"]])["HIV"]
  )
)

# Format the results
intervention_effects_conf$HIV_Change <- round(intervention_effects_conf$HIV_Change, 3)
intervention_effects_conf$Naive_Effect <- round(intervention_effects_conf$Naive_Effect, 3)
intervention_effects_conf$Adjusted_Effect <- round(intervention_effects_conf$Adjusted_Effect, 3)

datatable(intervention_effects_conf,
          caption = "Expected outcomes under different HIV interventions (naive vs adjusted)",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from Counterfactual Analysis:

The counterfactual analysis demonstrates the practical implications of confounding bias:

1. **Biased intervention predictions**: Naive analysis would lead to incorrect intervention effect estimates.

2. **Corrected causal estimates**: Proper adjustment provides accurate counterfactual predictions.

3. **Policy implications**: The difference between naive and adjusted estimates has major policy consequences.

4. **Intervention planning**: Only the adjusted model provides reliable guidance for interventions.

## 19. Sensitivity Analysis: Unmeasured Confounding

```{r}
#| label: sensitivity-analysis-confounded
#| fig-cap: "Sensitivity to unmeasured confounding"

# Function to simulate the impact of unmeasured confounding
simulate_unmeasured_confounding <- function(u_hiv_strength, u_stroke_strength) {
  # Create unmeasured confounder U
  set.seed(123)
  n <- 1000
  
  # Generate unmeasured confounder U
  U <- rnorm(n, mean = 0, sd = 1)
  
  # Modify our existing data to include unmeasured confounding
  HIV_with_U <- confounded_data$HIV + u_hiv_strength * U
  Stroke_with_U <- confounded_data$Stroke + u_stroke_strength * U
  
  # Estimate the apparent effect with measured confounders only
  apparent_effect <- coef(lm(Stroke_with_U ~ HIV_with_U + confounded_data$Smoking + confounded_data$Age))[2]
  
  return(apparent_effect)
}

# Test different levels of unmeasured confounding
u_strengths <- seq(0, 0.5, by = 0.1)
sensitivity_grid <- expand.grid(
  U_HIV_Strength = u_strengths,
  U_Stroke_Strength = u_strengths
)

sensitivity_grid$Apparent_Effect <- mapply(simulate_unmeasured_confounding, 
                                          sensitivity_grid$U_HIV_Strength,
                                          sensitivity_grid$U_Stroke_Strength)

# Create sensitivity results table for key scenarios
sensitivity_scenarios <- data.frame(
  Scenario = c("No unmeasured confounding", "Weak unmeasured confounding", 
               "Moderate unmeasured confounding", "Strong unmeasured confounding"),
  U_HIV_Effect = c(0.0, 0.1, 0.3, 0.5),
  U_Stroke_Effect = c(0.0, 0.1, 0.3, 0.5),
  Apparent_Effect = c(
    simulate_unmeasured_confounding(0.0, 0.0),
    simulate_unmeasured_confounding(0.1, 0.1),
    simulate_unmeasured_confounding(0.3, 0.3),
    simulate_unmeasured_confounding(0.5, 0.5)
  ),
  Bias_from_True = c(
    simulate_unmeasured_confounding(0.0, 0.0) - true_effect_conf,
    simulate_unmeasured_confounding(0.1, 0.1) - true_effect_conf,
    simulate_unmeasured_confounding(0.3, 0.3) - true_effect_conf,
    simulate_unmeasured_confounding(0.5, 0.5) - true_effect_conf
  )
)

# Format results
sensitivity_scenarios$Apparent_Effect <- round(sensitivity_scenarios$Apparent_Effect, 3)
sensitivity_scenarios$Bias_from_True <- round(sensitivity_scenarios$Bias_from_True, 3)

datatable(sensitivity_scenarios,
          caption = "Sensitivity Analysis: Impact of Unmeasured Confounding",
          options = list(pageLength = 10, dom = 't'),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

```{r}
#| label: sensitivity-heatmap
#| fig-cap: "Sensitivity heatmap showing bias from unmeasured confounding"

# Create heatmap of sensitivity analysis
sensitivity_wide <- sensitivity_grid %>%
  mutate(Bias = Apparent_Effect - true_effect_conf) %>%
  select(U_HIV_Strength, U_Stroke_Strength, Bias)

ggplot(sensitivity_wide, aes(x = U_HIV_Strength, y = U_Stroke_Strength, fill = Bias)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title = "Sensitivity to Unmeasured Confounding",
       subtitle = "Bias in HIV effect estimate",
       x = "Unmeasured Confounder Effect on HIV",
       y = "Unmeasured Confounder Effect on Stroke",
       fill = "Bias") +
  theme_minimal()
```

## Conclusions from Sensitivity Analysis:

The sensitivity analysis reveals the vulnerability to unmeasured confounding:

1. **Residual bias possible**: Even with measured confounders adjusted, unmeasured confounding can introduce bias.

2. **Magnitude matters**: The strength of unmeasured confounding determines the extent of bias.

3. **Need for robustness**: Multiple analytical approaches and sensitivity analyses are crucial.

4. **Design implications**: This highlights the value of experimental designs when possible.

## 20. Mediation Analysis: Decomposing Effects

```{r}
#| label: mediation-analysis-confounded
#| tbl-cap: "Mediation analysis: Effects through different pathways"

# Test mediation pathways in our confounded structure
# Path 1: Age → HIV → Stroke
age_hiv_model <- lm(HIV ~ Age, data = confounded_data)
age_hiv_stroke_model <- lm(Stroke ~ HIV + Age, data = confounded_data)

# Path 2: Age → Smoking → Stroke  
age_smoking_model <- lm(Smoking ~ Age, data = confounded_data)
age_smoking_stroke_model <- lm(Stroke ~ Smoking + Age, data = confounded_data)

# Path 3: Age → Smoking → HIV → Stroke
smoking_hiv_model <- lm(HIV ~ Smoking, data = confounded_data)
smoking_hiv_stroke_model <- lm(Stroke ~ HIV + Smoking, data = confounded_data)

# Calculate mediation effects
mediation_results <- data.frame(
  Pathway = c(
    "Age → HIV (a path)",
    "HIV → Stroke|Age (b path)", 
    "Age → HIV → Stroke (indirect)",
    "Age → Stroke (direct)",
    "Age → Smoking (a path)",
    "Smoking → Stroke|Age (b path)",
    "Age → Smoking → Stroke (indirect)",
    "Smoking → HIV (a path)",
    "HIV → Stroke|Smoking (b path)",
    "Smoking → HIV → Stroke (indirect)"
  ),
  Effect = c(
    coef(age_hiv_model)["Age"],
    coef(age_hiv_stroke_model)["HIV"],
    coef(age_hiv_model)["Age"] * coef(age_hiv_stroke_model)["HIV"],
    coef(age_hiv_stroke_model)["Age"],
    coef(age_smoking_model)["Age"],
    coef(age_smoking_stroke_model)["Smoking"],
    coef(age_smoking_model)["Age"] * coef(age_smoking_stroke_model)["Smoking"],
    coef(smoking_hiv_model)["Smoking"],
    coef(smoking_hiv_stroke_model)["HIV"],
    coef(smoking_hiv_model)["Smoking"] * coef(smoking_hiv_stroke_model)["HIV"]
  ),
  Interpretation = c(
    "Age effect on HIV status",
    "HIV effect on stroke controlling for age",
    "Indirect effect of age on stroke through HIV",
    "Direct effect of age on stroke",
    "Age effect on smoking behavior",
    "Smoking effect on stroke controlling for age", 
    "Indirect effect of age on stroke through smoking",
    "Smoking effect on HIV status",
    "HIV effect on stroke controlling for smoking",
    "Indirect effect of smoking on stroke through HIV"
  )
)

# Format results
mediation_results$Effect <- round(mediation_results$Effect, 3)

datatable(mediation_results,
          caption = "Mediation Analysis: Decomposing Effects in Confounded Structure",
          options = list(pageLength = 12, scrollX = TRUE),
          rownames = FALSE,
          class = 'cell-border stripe compact responsive')
```

## Conclusions from Mediation Analysis:

The mediation analysis reveals the complex pathway structure:

1. **Multiple mediation pathways**: Age affects stroke through both HIV and smoking pathways.

2. **Direct and indirect effects**: We can quantify how much of each effect is mediated vs direct.

3. **Confounding vs mediation**: The same variables can act as both confounders and mediators.

4. **Complex interdependencies**: The confounded structure creates intricate effect pathways.

## 21. Forest Plot Visualization of Treatment Effects

```{r}
#| label: forest-plot-confounded
#| fig-cap: "Forest plot of HIV effect estimates under different modeling approaches"

# Create forest plot data from our comparison table
forest_data_conf <- comparison_conf_df %>%
  filter(Model != "True Causal Effect") %>%
  mutate(
    Model = factor(Model, levels = rev(c(
      "Naive (Biased)",
      "Adjusted for Smoking",
      "Adjusted for Age", 
      "Fully Adjusted (Correct)"
    ))),
    CI_Lower = Coefficient - 1.96 * StandardError,
    CI_Upper = Coefficient + 1.96 * StandardError
  )

# Plot forest plot
ggplot(forest_data_conf, aes(x = Coefficient, y = Model,
                           xmin = CI_Lower, xmax = CI_Upper)) +
  geom_pointrange(size = 0.8, color = "darkgreen") +
  geom_vline(xintercept = true_effect_conf, linetype = "dashed", color = "red", size = 1) +
  labs(
    title = "HIV Effect Estimates Under Different Modeling Approaches",
    subtitle = "Dashed line represents the true causal effect (0.6)",
    x = "Estimated HIV Effect on Stroke",
    y = "Modeling Approach"
  ) +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 10))
```

## Conclusions from Forest Plot:

The forest plot illustrates the dramatic impact of confounding:

1. **Severe bias without adjustment**: The naive estimate is far from the true effect.

2. **Partial adjustment helps**: Individual confounder adjustment reduces bias but doesn't eliminate it.

3. **Complete adjustment necessary**: Only the fully adjusted model provides accurate estimates.

4. **Confidence intervals**: Even biased estimates can have narrow confidence intervals, giving false precision.

## 22. Practical Implications and Conclusions

### 22.1 Summary of Key Findings

Our comprehensive analysis of the confounded causal structure has revealed several fundamental insights about observational studies:

1. **Confounding creates substantial bias**: Simple associations between exposure and outcome are severely biased.

2. **Complete adjustment necessary**: Partial adjustment for confounders is insufficient for unbiased estimation.

3. **Multiple analytical approaches confirm**: Frequentist, Bayesian, and SEM approaches all show consistent confounding patterns.

4. **Sensitivity to unmeasured confounding**: Even with measured confounders adjusted, unmeasured confounding remains a threat.

### 22.2 The Challenge of Observational Studies

This confounded structure illustrates why observational studies require careful causal thinking:

**Challenges of Confounding:**
- Creates spurious associations between exposure and outcome
- Requires identification and measurement of all relevant confounders
- Partial adjustment can provide false confidence in results
- Unmeasured confounding remains a persistent threat

**Critical Requirements:**
- Proper causal identification using DAGs
- Complete adjustment for all backdoor paths
- Sensitivity analyses for unmeasured confounding
- Multiple analytical approaches for robustness

### 22.3 Real-World Applications

This framework applies to numerous observational study contexts:

- **Medical studies**: Examining treatment effects in routine clinical care
- **Epidemiological research**: Investigating risk factors for disease outcomes
- **Social science**: Studying interventions in natural settings
- **Economic analysis**: Evaluating policy impacts using observational data

### 22.4 Comparison with Experimental Studies

Unlike experimental studies where randomization eliminates confounding:

- **Multiple backdoor paths exist** requiring careful adjustment
- **Complete adjustment sets needed** for causal identification
- **Lower internal validity** due to confounding threats
- **More complex analytical requirements** compared to experiments

### 22.5 Methodological Recommendations

Based on this analysis, we recommend:

1. **Draw causal DAGs**: Explicitly map the assumed causal structure before analysis
2. **Identify adjustment sets**: Use backdoor criterion to determine necessary adjustments
3. **Complete adjustment**: Ensure all confounding pathways are blocked
4. **Sensitivity analysis**: Test robustness to unmeasured confounding
5. **Multiple approaches**: Use different analytical methods to confirm results
6. **Transparent reporting**: Clearly state causal assumptions and limitations

### 22.6 The Value of DAG Thinking in Observational Studies

DAG thinking is essential for observational studies:

- **Clarifies confounding structure**: Makes explicit what creates bias
- **Guides analytical choices**: Identifies necessary vs unnecessary adjustments
- **Prevents overadjustment**: Avoids controlling for mediators or colliders
- **Communicates assumptions**: Provides clear visualization of causal beliefs
- **Enables sensitivity analysis**: Facilitates testing of robustness

### 22.7 Limitations and Future Directions

Even with proper adjustment, observational studies have limitations:

1. **Unmeasured confounding**: Cannot adjust for unknown or unmeasured confounders
2. **Temporal ordering**: Ensuring proper causal ordering can be challenging
3. **Selection bias**: Non-random sampling can introduce additional biases
4. **Measurement error**: Imperfect measurement of confounders affects adjustment

## 23. Session Information for Reproducibility

```{r}
#| label: session-info-confounded
#| echo: false

# Session information for reproducibility
sessionInfo()
```

This analysis demonstrates that confounded causal structures require sophisticated analytical approaches to obtain valid causal inferences. Unlike experimental designs where randomization eliminates confounding, observational studies must carefully identify and adjust for all confounding pathways. The DAG framework provides essential guidance for this process, helping researchers understand the sources of bias and develop appropriate analytical strategies.

Think of confounding like trying to measure the effect of a new fertilizer on plant growth in a garden where different areas receive different amounts of sunlight and water. If you simply compare plants that received fertilizer to those that didn't, you'll get a biased estimate because the fertilized plants might also be in sunnier, better-watered spots. Just as you'd need to account for sunlight and water differences to isolate the fertilizer effect, observational studies must account for all the "background differences" (confounders) that affect both the exposure and outcome to isolate the true causal effect.

The key insight is that confounding doesn't just add noise—it systematically biases our estimates in ways that can completely mislead our understanding of causal relationships. Only through careful causal thinking and appropriate analytical methods can we hope to extract valid causal inferences from observational data.

